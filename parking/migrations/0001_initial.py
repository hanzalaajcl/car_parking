# Generated by Django 4.2.6 on 2024-01-23 05:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import parking.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GlobalConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=36)),
                ('value', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'GlobalConfiguration',
            },
        ),
        migrations.CreateModel(
            name='ParkingPlaza',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.CharField(blank=True, max_length=512, null=True)),
                ('area', models.FloatField(blank=True, null=True)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('register_date', models.DateField(auto_now_add=True)),
                ('register_time', models.TimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=False)),
                ('register_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ParkingPlaza',
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_type', models.CharField(max_length=155)),
                ('vehicle_model', models.CharField(max_length=155)),
                ('register_date', models.DateField(auto_now_add=True)),
                ('register_time', models.TimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=False)),
                ('charges', models.FloatField()),
                ('vehicle_image', models.FileField(blank=True, null=True, upload_to=parking.models.save_vehicle_image)),
                ('register_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Vehicle',
            },
        ),
        migrations.CreateModel(
            name='UserAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assign_date', models.DateField(auto_now_add=True)),
                ('assign_time', models.TimeField(auto_now_add=True)),
                ('upload_date', models.DateField(auto_now_add=True)),
                ('upload_time', models.TimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=False)),
                ('assigned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_who_assigned', to=settings.AUTH_USER_MODEL)),
                ('parking_plaza', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parking.parkingplaza')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'UserAllocation',
            },
        ),
        migrations.CreateModel(
            name='ParkingVehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_number', models.CharField(max_length=256)),
                ('vehicle_type', models.CharField(max_length=155)),
                ('vehicle_model', models.CharField(max_length=155)),
                ('check_in_date', models.DateField(auto_now_add=True)),
                ('check_in_time', models.TimeField(auto_now_add=True)),
                ('check_out_date', models.DateField(blank=True, null=True)),
                ('check_out_time', models.TimeField(blank=True, null=True)),
                ('check_in_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_who_checked_in', to=settings.AUTH_USER_MODEL)),
                ('check_in_plaza', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plaza_of_vehicles', to='parking.parkingplaza')),
                ('check_out_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_who_checked_out', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ParkingVehicle',
            },
        ),
        migrations.CreateModel(
            name='ParkingPlazaLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.CharField(blank=True, max_length=50, null=True)),
                ('area', models.FloatField()),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('register_date', models.DateField(auto_now_add=True)),
                ('register_time', models.TimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=False)),
                ('log_timestamp', models.DateTimeField(auto_now_add=True)),
                ('register_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ParkingPlazaLog',
            },
        ),
    ]
